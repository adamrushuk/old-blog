# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
    - master

variables:
  # Main vars
  VM_IMAGE: ubuntu-16.04
  SERVICE_CONNECTION: arm_sc01
  GENERIC_SERVICE_CONNECTION: generic_sc_www.virtuallyimpossible.co.uk
  LOCATION_NAME: eastus
  RESOURCE_GROUP_NAME: old-blog-rg
  STORAGE_ACCOUNT_NAME: virtuallyimpossiblecouk
  CONTENT_RELATIVE_PATH: content
  DOMAIN_FQDN: www.virtuallyimpossible.co.uk
  PRIMARY_ENDPOINT: DynamicallyAssignedDuringPipelineRun

  # DNS vars
  DOMAIN_NAME: virtuallyimpossible.co.uk
  # DNS_API_KEY: SecretDefinedInPipeline
  # DNS_API_SECRET: SecretDefinedInPipeline

stages:
- stage: Deploy
  jobs:
  - job: Deploy
    pool:
      vmImage: $(VM_IMAGE)
    steps:
    - task: AzurePowerShell@4
      displayName: "Azure PowerShell Script: Deploy Static Website"
      inputs:
        azureSubscription: $(SERVICE_CONNECTION)
        ScriptPath: scripts/Deploy-StaticWebsite.ps1
        ScriptArguments: -LocationName $(LOCATION_NAME) -ResourceGroupName $(RESOURCE_GROUP_NAME) -StorageAccountName $(STORAGE_ACCOUNT_NAME) -ContentRelativePath $(CONTENT_RELATIVE_PATH) -DomainFqdn $(DOMAIN_FQDN)
        azurePowerShellVersion: LatestVersion

    - task: PowerShell@2
      displayName: "PowerShell Script: Update DNS A Record"
      inputs:
        targetType: filePath
        filePath: scripts/Update-Dns.ps1
        arguments: -DomainName $(DOMAIN_NAME) -RecordType "CNAME" -RecordName "www" -RecordValue $(PRIMARY_ENDPOINT) -ApiKey $(DNS_API_KEY) -ApiSecret $(DNS_API_SECRET)
        pwsh: true

    - task: PowerShell@2
      displayName: "PowerShell Script: Wait for successful Web Request"
      inputs:
        targetType: filePath
        filePath: scripts/Retry-Command.ps1
        arguments: -TimeoutInSecs 30 -RetryCount 30 -ScriptBlock {Invoke-WebRequest -Uri $(DOMAIN_FQDN)}
        pwsh: true

    - task: AzurePowerShell@4
      displayName: "Azure PowerShell Script: Set Custom Domain"
      inputs:
        azureSubscription: $(SERVICE_CONNECTION)
        ScriptPath: scripts/Set-CustomDomain.ps1
        ScriptArguments: -ResourceGroupName $(RESOURCE_GROUP_NAME) -StorageAccountName $(STORAGE_ACCOUNT_NAME) -DomainFqdn $(DOMAIN_FQDN)
        azurePowerShellVersion: LatestVersion
